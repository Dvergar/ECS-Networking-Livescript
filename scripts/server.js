// Generated by LiveScript 1.2.0
(function(){
  'use strict';
  var em, position, ref$, bb, mark, posenc, pos2, x$, paddleAutoControllerSystem, out$ = typeof exports != 'undefined' && exports || this;
  out$.em = em = new EntityManager("server");
  net.listen('god', 'localhost', 9000);
  net.onOpen = onOpen;
  function onInput(event){
    return console.log(event.key_up);
  }
  em.registerEvent(INPUT, onInput);
  position = (ref$ = new CPosition, ref$.x = 10, ref$.y = 10, ref$);
  bb = new dcodeIO.ByteBuffer;
  bb.writeInt8(0);
  mark = bb.offset;
  posenc = position.encode();
  bb.append(posenc);
  bb.offset = mark + posenc.length;
  console.log(bb.toColumns());
  bb.writeInt8(0);
  mark = bb.offset;
  posenc = position.encode();
  bb.append(posenc);
  bb.offset = mark + posenc.length;
  console.log(bb.toColumns());
  bb.flip();
  console.log(bb.toColumns());
  console.log('length_' + bb.length);
  console.log('offset_' + bb.offset);
  bb.readInt8();
  console.log(bb.toColumns());
  pos2 = CPosition.decode(bb);
  console.log(bb.toColumns());
  x$ = pos2;
  console.log(x$.x);
  console.log(x$.y);
  function onOpen(conn){
    return console.log('onOpen');
  }
  function dummy(){
    return console.log;
  }
  paddleAutoControllerSystem = new PaddleAutoControllerSystem;
  setInterval(function(){
    return em.fixedUpdate(dummy);
  }, 1000 / 60);
}).call(this);
